version: 2.1

parameters:
  test-zdm:
    type: boolean
    default: false

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

workflows:
  main_test:
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
    when: << pipeline.parameters.test-zdm >>
    jobs:
      - build-and-test

jobs:
  build-and-test:
    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    docker:
      - image: cimg/python:3.8
    # Checkout the code as the first step. This is a dedicated CircleCI step.
    # The python orb's install-packages step will install the dependencies from a Pipfile via Pipenv by default.
    # Here we're making sure we use just use the system-wide pip. By default it uses the project root's requirements.txt.
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "1d:40:da:e4:2c:2d:63:4b:e3:5c:7d:d3:bf:b4:a4:e7"
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements.

      - run:
          name: Run tests
          # This assumes pytest is installed via the install-package step above
          command: pytest -s || true

      - store_artifacts:
          name: Log errors into file
          path: errors.txt

      - run:
          name: Commit to GitHub
          command: |
            ls
            git config user.email "areoflo@gmail.com"
            git config user.name "Fehu4"
            git checkout circleci-project-setup
            git add logs
            git add .
            git commit --allow-empty -am "Automatic commit from CircleCI [skip ci]"
            git push origin circleci-project-setup
